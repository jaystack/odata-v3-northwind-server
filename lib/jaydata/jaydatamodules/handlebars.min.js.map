{"version":3,"sources":["node_modules/browser-pack/_prelude.js","handlebars.js","src/JayDataModules/src/JayDataModules/handlebars.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","$data","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_typeof","Symbol","iterator","constructor","_core","_core2","_jquery","_jquery2","_Handlebars","_Handlebars2","Handlebars","$","handleBarTemplateCompiler","templateCode","compile","htmlTemplateResolver","type","templateName","trim","undefined","typeTemplateResolver","globalTemplateNameResolver","sname","Container","resolveName","split","name","html","addToCache","item","clientId","_clientId","key","cacheKey","_cacheItemId","displayCache","references","indexOf","push","getFromCache","oldProcessor","Entity","inheritedTypeProcessor","templateEngine","templateResolvers","templateCompiler","templateCache","getTemplate","template","incache","fullName","console","log","render","data","typeName","Array","isArray","field","hasOwnProperty","renderItems","result","renderTo","selector","renderMode","empty","append","replaceWith","after","before","renderItemsTo","items","addCommand","commandName","event","handler","root","document","filter","delegate","entity","apply","readAll","then","prototype","getType","Queryable","toArray","get","results","memberDefinitions","getPublicMappedProperties","forEach","md","kind","metadata","registerHelper","arguments","SafeString","getKeyProperties","id","toLowerCase","cacheInfo","command","entityCache","entKey","setCommandHandler","app","method","args","evt","srcElement","parentsUntil","children","removeClass","addClass","jaydata/core"],"mappings":";;;;;;;;;;;;;CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,OAAA,8BAAA,gBAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,MAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAC,EAAAzB,EAAAD,ICcA,SAAWM,GACX,YAoBA,SAASqB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAlBvFG,OAAOC,eAAehC,EAAS,cAC3BiC,OAAO,GAGX,IAAIC,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUR,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXO,SAAyBP,EAAIS,cAAgBF,OAAS,eAAkBP,ICrB1OU,EAAAZ,EAAA,gBDyBIa,EAASZ,EAAuBW,GCxBpCE,EAAA,mBAAAnC,QAAAA,OAAA,OAAA,mBAAAC,GAAAA,EAAA,OAAA,KD4BImC,EAAWd,EAAuBa,GC3BtCE,EAAA,mBAAArC,QAAAA,OAAA,WAAA,mBAAAC,GAAAA,EAAA,WAAA,KD+BIqC,EAAehB,EAAuBe,IC7B1C,SAAWjC,EAAOmC,EAAYC,GAa1B,QAASC,GAA0BC,GAC/B,MAAOH,GAAWI,QAAQD,GAG9B,QAASE,GAAqBC,EAAMC,GAChC,MAAKA,IAGLA,EAAeA,EAAaC,OACpBD,IAAsC,MAApBA,EAAa,IAAkC,MAApBA,EAAa,IAAcA,EAA4BE,QAJ5G,OAOJ,QAASC,GAAqBJ,EAAMC,IAWpC,QAASI,GAA2BL,EAAMC,GACtC,IAAKA,EAAc,CACf,GAAIK,GAAQ/C,EAAMgD,UAAUC,YAAYR,GAAMS,MAAM,KAChDC,EAAOJ,EAAMA,EAAMhC,OAAS,EAChC2B,GAAeS,EAEnB,MAAOf,GAAE,IAAMM,GAAcU,OA8OjC,QAASC,GAAWC,EAAMC,GAClB,mBAAuBA,KACvBA,EAAWA,GAAYC,IAE3B,IAAIC,GAAMH,EAAKI,QACf,IAAI,mBAAuBD,GACvBA,EAAMH,EAAKI,SAAWC,IACtB3D,EAAM4D,aAAaN,EAAKI,WACpBlC,MAAO8B,EACPO,YAAaN,QAEd,CACH,GAAI/B,GAAQxB,EAAM4D,aAAaH,EAC3BjC,GAAMqC,WAAWC,QAAQP,GAAY,GACrC/B,EAAMqC,WAAWE,KAAKR,GAG9B,OAASG,SAAUD,EAAKF,SAAUA,GAEtC,QAASS,GAAaN,GACnB,MAAQ1D,GAAM4D,aAAaF,GAAUlC,MA3SxC,GAAIyC,GAAejE,EAAMkE,OAAOC,uBA6C5BC,GACAC,mBAAoB7B,EAAsBK,EAAsBC,GAChEwB,iBAAkBjC,EAClBkC,iBACAC,YAAa,SAAU/B,EAAMC,GACzB,GAAI+B,GAAUC,EAAShE,EACnBgD,EAAWjB,EAAKkC,SAAW,KAAOjC,CAEtC,KADAgC,EAAUD,EAAW1E,KAAKwE,cAAcb,GAAWhD,EAAI,GAC/C+D,GAAY/D,EAAIX,KAAKsE,kBAAkBtD,QAC3C0D,EAAW1E,KAAKsE,kBAAkB3D,KAAK+B,EAAMC,EAQjD,OANI+B,KAAaC,IACbD,EAAW1E,KAAKwE,cAAcb,GAAY3D,KAAKuE,iBAAiBG,IAE/DA,GACDG,QAAQC,IAAI,0BAA4BnC,GAErC+B,GAIfzE,GAAMoE,eAAiBA,EAEvBpE,EAAM8E,OAAS,SAAUC,EAAMrC,GAC3B,GAAIqC,YAAgB/E,GAAMkE,OACtB,MAAOa,GAAKD,OAAOpC,EAGvB,IAAIsC,GACA1B,EAAQ2B,MAAMC,QAAQH,GAAQA,EAAK,GAAKA,CAC5C,KAAK,GAAII,KAAS7B,GACVA,EAAK8B,eAAeD,KACpBH,GAAaG,EAAQ,KAG7B,IAAI1C,IAASkC,SAAUK,GACnBP,EAAWL,EAAeI,YAAY/B,EAAMC,EAChD,OAAO+B,GAASM,IAGpB/E,EAAMqF,YAAc,SAAUN,EAAMrC,GAEhC,IAAK,GADD4C,GAAS,GACJ5E,EAAI,EAAGA,EAAIqE,EAAKhE,OAAQL,IAC7B4E,GAAUtF,EAAM8E,OAAOC,EAAKrE,GAAIgC,EAEpC,OAAO4C,IAIXtF,EAAMuF,SAAW,SAAUC,EAAU9C,EAAc+C,GAG/C,MAFAA,GAAaA,GAAc,iBAEpB,SAAUV,GACM,mBAAfU,GACArD,EAAEoD,GAAUE,OAGhB,IAAIJ,EAEJ,QADAA,EAAStF,EAAM8E,OAAOC,EAAMrC,GACpB+C,GACJ,IAAK,SACL,IAAK,iBACDrD,EAAEoD,GAAUG,OAAOL,EACnB,MACJ,KAAK,UACDlD,EAAEoD,GAAUI,YAAYN,EACxB,MACJ,KAAK,QACDlD,EAAEoD,GAAUK,MAAMP,EAClB,MACJ,KAAK,SACDlD,EAAEoD,GAAUM,OAAOR,GAI3B,MAAOP,KAIf/E,EAAM+F,cAAgB,SAAUP,EAAU9C,EAAc+C,GAGpD,MAFAA,GAAaA,GAAc,iBAEpB,SAAUV,GACM,mBAAfU,GACArD,EAAEoD,GAAUE,OAGhB,IAAIJ,EAEJ,QADAA,EAAStF,EAAMqF,YAAYN,EAAMrC,GACzB+C,GACJ,IAAK,SACL,IAAK,iBACDrD,EAAEoD,GAAUG,OAAOL,EACnB,MACJ,KAAK,UACDlD,EAAEoD,GAAUI,YAAYN,EACxB,MACJ,KAAK,QACDlD,EAAEoD,GAAUK,MAAMP,EAClB,MACJ,KAAK,SACDlD,EAAEoD,GAAUM,OAAOR,GAI3B,MAAOP,KAKf/E,EAAMkE,OAAOC,uBAAyB,SAAU1B,GAM5C,QAASqC,GAAOxB,EAAMZ,GAClB,GAAI+B,GAAWL,EAAeI,YAAY/B,EAAMC,EAIhD,OAHOY,aAAgBtD,GAAMkE,SACzBZ,EAAO,GAAIb,GAAKa,IAEbmB,EAASnB,GAKpB,QAAS+B,GAAYW,EAAOtD,GAExB,IAAK,GADD4C,GAAQ,GACH5E,EAAI,EAAGA,EAAIsF,EAAMjF,OAAQL,IAC9B4E,GAAUR,EAAOkB,EAAMtF,GAAIgC,EAE/B,OAAO4C,GApBPrB,GACAA,EAAaxB,GAYjBA,EAAKqC,OAASA,EAUdrC,EAAK4C,YAAcA,EAEnB5C,EAAKwD,WAAa,SAAUC,EAAaC,EAAOC,EAASC,GACrDA,EAAOA,GAAQC,SACM,kBAAVH,KACPC,EAAUD,EACVA,EAAQ,QAEZ,IAAIpD,GAAQN,EAAKkC,SAASzB,MAAM,KAC5BC,EAAOJ,EAAMA,EAAMhC,OAAS,GAC5BwF,EAAS,kBAAoBL,EAAc,iBAAmB/C,EAAO,IAEzEf,GAAEiE,GAAMG,SAASD,EAAQJ,EAAO,WAC5B,GAAIrG,GAAOC,KACP2D,EAAWtB,EAAErC,MAAMgF,KAAK,cACxB0B,EAASzC,EAAaN,IACd+C,EAAQrE,EAAErC,MAAMgF,KAAK,MACjCqB,GAAQM,MAAMD,GAASA,EAAQ3G,EAAMsC,EAAEtC,GAAMiF,KAAK,WAI1DtC,EAAK8C,SAAW,SAAUjC,EAAMkC,EAAU9C,EAAc+C,GACpD,GAAoB,YAAhB,mBAAOnC,GAAP,YAAA7B,EAAO6B,IAIP,MAHAmC,GAAa/C,EACbA,EAAe8C,EACfA,EAAWlC,EACJb,EAAKkE,UAAUC,KAAK5G,EAAMuF,SAASC,EAAU9C,EAAc+C,GAEtE,MAAM,IAAI9E,OAAM,oBAGpB8B,EAAKsD,cAAgB,SAAUC,EAAOR,EAAU9C,EAAc+C,GAC1D,IAAMR,MAAMC,QAAQc,GAIhB,MAHAP,GAAa/C,EACbA,EAAe8C,EACfA,EAAWQ,EACJvD,EAAKkE,UAAUC,KAAK5G,EAAM+F,cAAcP,EAAU9C,EAAc+C,GAE3E,MAAM,IAAI9E,OAAM,qBAQxBX,EAAMkE,OAAO2C,UAAU/B,OAAS,SAAUpC,GACtC,MAAO3C,MAAK+G,UAAUhC,OAAO/E,KAAM2C,IAGvC1C,EAAMkE,OAAO2C,UAAUtB,SAAW,SAAUC,EAAU9C,EAAc+C,GAChE,MAAOzF,GAAMuF,SAASC,EAAU9C,EAAc+C,GAAY1F,OAG9DC,EAAM+G,UAAUF,UAAUtB,SAAW,SAAUC,EAAU9C,EAAc+C,GACnE,MAAO1F,MAAKiH,UAAUJ,KAAK,SAAUZ,GACjC,MAAOhG,GAAMuF,SAASC,EAAU9C,EAAc+C,GAAYO,MAIlEhG,EAAM+G,UAAUF,UAAUd,cAAgB,SAAUP,EAAU9C,EAAc+C,GACxE,MAAO1F,MAAKiH,UAAUJ,KAAK,SAAUZ,GACjC,MAAOhG,GAAM+F,cAAcP,EAAU9C,EAAc+C,GAAYO,MAIvE1E,OAAOC,eAAevB,EAAMkE,OAAO2C,UAAW,UAC1CI,IAAK,WACD,GAAInH,GAAOC,KACPmH,IAgBJ,OAfAnH,MAAK+G,UAAUK,kBAAkBC,4BAA4BC,QAAQ,SAAUC,GAC3E,GAAInE,GAAOmE,EAAGnE,IACd,IAAgB,aAAZmE,EAAGC,KAAqB,CACxB,GAAIpC,IACAhC,KAAMmE,EAAGnE,KACTqE,SAAUF,EAEdhG,QAAOC,eAAe4D,EAAO,SACzB8B,IAAK,WACD,MAAOnH,GAAKqD,MAGpB+D,EAAQnD,KAAKoB,MAGd+B,KAIf/E,EAAWsF,eAAe,eAAgB,SAAU/E,GAIhD,MAHIgF,WAAU3G,OAAS,IACnB2B,EAAeE,QAEZ,GAAIT,GAAWwF,WAAW3H,EAAM8E,OAAO/E,KAAM2C,MAGxD1C,EAAM4D,eACN,IAAID,GAAe,EACfH,EAAY,CAwBhBrB,GAAWsF,eAAe,cAAe,WAErC,GAAI1E,GAAQ/C,EAAMgD,UAAUC,YAAYlD,KAAK+G,WAAW5D,MAAM,KAC1DC,EAAOJ,EAAMA,EAAMhC,OAAS,GAC5B0C,EAAM1D,KAAK+G,UAAUK,kBAAkBS,mBAAmB,GAC1DC,EAAK9H,KAAK0D,EAAIN,MAEdmC,EAAS,QAAUnC,EAAK2E,cAAgB,IAAMD,EAC9CE,EAAY1E,EAAWtD,KAG3B,OAFAuF,IAAU,sBAAwByC,EAAUxE,SAC5C+B,GAAU,oBAAsByC,EAAUrE,WAK9CvB,EAAWsF,eAAe,gBAAiB,SAAUO,GACjD,GAAIlI,GAAOC,IACXC,GAAMiI,YAAcjI,EAAMiI,eAC1B,IAAIlF,GAAQ/C,EAAMgD,UAAUC,YAAYlD,KAAK+G,WAAW5D,MAAM,KAC1DC,EAAOJ,EAAMA,EAAMhC,OAAS,GAC5B0C,EAAM3D,EAAKgH,UAAUK,kBAAkBS,mBAAmB,GAC1DC,EAAK/H,EAAK2D,EAAIN,MACd+E,EAAS/E,EAAO,IAAM0E,CAErB7H,GAAMiI,YAAYC,KACnBlI,EAAMiI,YAAYC,GAAUpI,EAEhC,IAAIwF,GAAS,gBAAkB0C,EAAU,cAAgB7E,EAAO,YAAc0E,EAC1EE,EAAY1E,EAAWtD,KAG3B,OAFAuF,IAAU,sBAAwByC,EAAUxE,SAC5C+B,GAAU,oBAAsByC,EAAUrE,WAI9C1D,EAAMmI,kBAAoB,SAAUC,EAAK/B,GACrCA,EAAOA,GAAQC,SACflE,EAAEiE,GAAMG,SAAS,iBAAkB,QAAS,WACxC,GACI6B,IADSjG,EAAErC,MAAMgF,KAAK,QAAU,IAAM3C,EAAErC,MAAMgF,KAAK,MAC1CqD,EAAIhG,EAAErC,MAAMgF,KAAK,WAAa3C,EAAErC,MAAMgF,KAAK,UACpDrB,EAAWtB,EAAErC,MAAMgF,KAAK,cACxB0B,EAASzC,EAAaN,GACtB4E,GAAQ7B,EAAQrE,EAAErC,MAAMgF,KAAK,MACjCsD,GAAO3B,MAAM0B,EAAKE,MAI1BlG,EAAEkE,UAAUE,SAAS,iBAAkB,QAAS,SAAU+B,GACtD,GAAIjD,GAASlD,EAAEmG,EAAIC,YAAYC,aAAa1I,KAC5CqC,GAAErC,MAAM2I,WAAWC,YAAY,UAC/BrD,EAAOsD,SAAS,aA/VxB9G,EAAAA,WAAAI,EAAAA,WAAAF,EAAAA,YD0XAzC,EAAAA,WAAkBuC,EAAAA,WAClBtC,EAAOD,QAAUA,EAAQ,aAEtBuB,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,aAExHiJ,eAAe,sBAAsB,IAAI","file":"handlebars.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿// JayData 1.5.5 RC\r\n// Dual licensed under MIT and GPL v2\r\n// Copyright JayStack Technologies (http://jaydata.org/licensing)\r\n//\r\n// JayData is a standards-based, cross-platform Javascript library and a set of\r\n// practices to access and manipulate data from various online and offline sources.\r\n//\r\n// Credits:\r\n//     Hajnalka Battancs, Dániel József, János Roden, László Horváth, Péter Nochta\r\n//     Péter Zentai, Róbert Bónay, Szabolcs Czinege, Viktor Borza, Viktor Lázár,\r\n//     Zoltán Gyebrovszki, Gábor Dolla\r\n//\r\n// More info: http://jaydata.org\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define(\"jaydata/modules/handlebars\",[\"jaydata/core\"],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.$data = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _jquery = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _Handlebars = (typeof window !== \"undefined\" ? window['Handlebars'] : typeof global !== \"undefined\" ? global['Handlebars'] : null);\n\nvar _Handlebars2 = _interopRequireDefault(_Handlebars);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function ($data, Handlebars, $) {\n    var oldProcessor = $data.Entity.inheritedTypeProcessor;\n    var templateCache = {};\n\n    function getTemplate(templateName) {\n        return templateCache[templateName] || (templateCache[templateName] = templateName[0] === '<' ? Handlebars.compile(templateName) : Handlebars.compile($('#' + templateName).html()));\n    }\n\n    function handleBarTemplateCompiler(templateCode) {\n        return Handlebars.compile(templateCode);\n    }\n\n    function htmlTemplateResolver(type, templateName) {\n        if (!templateName) {\n            return undefined;\n        }\n        templateName = templateName.trim();\n        return templateName ? templateName[0] === \"<\" || templateName[0] === \"{\" ? templateName : undefined : undefined;\n    }\n\n    function typeTemplateResolver(type, templateName) {\n\n        //if (!templateName) {\n        //    var sname = $data.Container.resolveName(type).split(\".\");\n        //    var name = sname[sname.length - 1];\n        //    templateName = name;\n        //}\n        //var template = getTemplate(templateName);\n        return undefined;\n    }\n\n    function globalTemplateNameResolver(type, templateName) {\n        if (!templateName) {\n            var sname = $data.Container.resolveName(type).split(\".\");\n            var name = sname[sname.length - 1];\n            templateName = name;\n        }\n        return $('#' + templateName).html();\n    }\n\n    var templateEngine = {\n        templateResolvers: [htmlTemplateResolver, typeTemplateResolver, globalTemplateNameResolver],\n        templateCompiler: handleBarTemplateCompiler,\n        templateCache: {},\n        getTemplate: function getTemplate(type, templateName) {\n            var template, incache, i;\n            var cacheKey = type.fullName + \"::\" + templateName;\n            incache = template = this.templateCache[cacheKey], i = 0;\n            while (!template && i < this.templateResolvers.length) {\n                template = this.templateResolvers[i++](type, templateName);\n            }\n            if (template && !incache) {\n                template = this.templateCache[cacheKey] = this.templateCompiler(template);\n            }\n            if (!template) {\n                console.log(\"Can not find template: \" + templateName);\n            }\n            return template;\n        }\n    };\n\n    $data.templateEngine = templateEngine;\n\n    $data.render = function (data, templateName) {\n        if (data instanceof $data.Entity) {\n            return data.render(templateName);\n        }\n\n        var typeName;\n        var item = Array.isArray(data) ? data[0] : data;\n        for (var field in item) {\n            if (item.hasOwnProperty(field)) {\n                typeName += field + \"::\";\n            }\n        };\n        var type = { fullName: typeName };\n        var template = templateEngine.getTemplate(type, templateName);\n        return template(data);\n    };\n\n    $data.renderItems = function (data, templateName) {\n        var result = '';\n        for (var i = 0; i < data.length; i++) {\n            result += $data.render(data[i], templateName);\n        }\n        return result;\n    };\n\n    //render modes: replace, replaceContent, append, before, after\n    $data.renderTo = function (selector, templateName, renderMode) {\n        renderMode = renderMode || \"replaceContent\";\n\n        return function (data) {\n            if (renderMode === 'replaceContent') {\n                $(selector).empty();\n            };\n\n            var result;\n            result = $data.render(data, templateName);\n            switch (renderMode) {\n                case \"append\":\n                case \"replaceContent\":\n                    $(selector).append(result);\n                    break;\n                case \"replace\":\n                    $(selector).replaceWith(result);\n                    break;\n                case \"after\":\n                    $(selector).after(result);\n                    break;\n                case \"before\":\n                    $(selector).before(result);\n                    break;\n            }\n\n            return data;\n        };\n    };\n\n    $data.renderItemsTo = function (selector, templateName, renderMode) {\n        renderMode = renderMode || \"replaceContent\";\n\n        return function (data) {\n            if (renderMode === 'replaceContent') {\n                $(selector).empty();\n            };\n\n            var result;\n            result = $data.renderItems(data, templateName);\n            switch (renderMode) {\n                case \"append\":\n                case \"replaceContent\":\n                    $(selector).append(result);\n                    break;\n                case \"replace\":\n                    $(selector).replaceWith(result);\n                    break;\n                case \"after\":\n                    $(selector).after(result);\n                    break;\n                case \"before\":\n                    $(selector).before(result);\n                    break;\n            }\n\n            return data;\n        };\n    };\n\n    $data.Entity.inheritedTypeProcessor = function (type) {\n        if (oldProcessor) {\n            oldProcessor(type);\n        }\n\n        function render(item, templateName) {\n            var template = templateEngine.getTemplate(type, templateName);\n            if (!(item instanceof $data.Entity)) {\n                item = new type(item);\n            }\n            return template(item);\n        }\n\n        type.render = render;\n\n        function renderItems(items, templateName) {\n            var result = '';\n            for (var i = 0; i < items.length; i++) {\n                result += render(items[i], templateName);\n            }\n            return result;\n        }\n\n        type.renderItems = renderItems;\n\n        type.addCommand = function (commandName, event, handler, root) {\n            root = root || document;\n            if (typeof event === 'function') {\n                handler = event;\n                event = 'click';\n            }\n            var sname = type.fullName.split(\".\");\n            var name = sname[sname.length - 1];\n            var filter = \"[data-command='\" + commandName + \"'][data-type='\" + name + \"']\";\n            //alert(filter);\n            $(root).delegate(filter, event, function () {\n                var self = this;\n                var cacheKey = $(this).data(\"cache-item\");\n                var entity = getFromCache(cacheKey);\n                var args = [entity, $(this).data(\"id\")];\n                handler.apply(entity, [entity, self, $(self).data(\"id\")]);\n            });\n        };\n\n        type.renderTo = function (item, selector, templateName, renderMode) {\n            if ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) !== 'object') {\n                renderMode = templateName;\n                templateName = selector;\n                selector = item;\n                return type.readAll().then($data.renderTo(selector, templateName, renderMode));\n            }\n            throw new Error(\"Not implemented\");\n        };\n\n        type.renderItemsTo = function (items, selector, templateName, renderMode) {\n            if (!Array.isArray(items)) {\n                renderMode = templateName;\n                templateName = selector;\n                selector = items;\n                return type.readAll().then($data.renderItemsTo(selector, templateName, renderMode));\n            }\n            throw new Error(\"Not implemented\");\n        };\n        //type.renderTo = function (data, selector, template, renderMode) {\n        //    $data.renderTo(selector, template, renderMode)(data);\n        //}\n    };\n\n    $data.Entity.prototype.render = function (templateName) {\n        return this.getType().render(this, templateName);\n    };\n\n    $data.Entity.prototype.renderTo = function (selector, templateName, renderMode) {\n        return $data.renderTo(selector, templateName, renderMode)(this);\n    };\n\n    $data.Queryable.prototype.renderTo = function (selector, templateName, renderMode) {\n        return this.toArray().then(function (items) {\n            return $data.renderTo(selector, templateName, renderMode)(items);\n        });\n    };\n\n    $data.Queryable.prototype.renderItemsTo = function (selector, templateName, renderMode) {\n        return this.toArray().then(function (items) {\n            return $data.renderItemsTo(selector, templateName, renderMode)(items);\n        });\n    };\n\n    Object.defineProperty($data.Entity.prototype, \"fields\", {\n        get: function get() {\n            var self = this;\n            var results = [];\n            this.getType().memberDefinitions.getPublicMappedProperties().forEach(function (md) {\n                var name = md.name;\n                if (md.kind === \"property\") {\n                    var field = {\n                        name: md.name,\n                        metadata: md\n                    };\n                    Object.defineProperty(field, 'value', {\n                        get: function get() {\n                            return self[name];\n                        }\n                    });\n                    results.push(field);\n                }\n            });\n            return results;\n        }\n    });\n\n    Handlebars.registerHelper(\"renderEntity\", function (templateName) {\n        if (arguments.length < 2) {\n            templateName = undefined;\n        }\n        return new Handlebars.SafeString($data.render(this, templateName));\n    });\n\n    $data.displayCache = {};\n    var _cacheItemId = 0;\n    var _clientId = 0;\n\n    function addToCache(item, clientId) {\n        if ('undefined' === typeof clientId) {\n            clientId = clientId || _clientId++;\n        }\n        var key = item.cacheKey;\n        if ('undefined' === typeof key) {\n            key = item.cacheKey = _cacheItemId++;\n            $data.displayCache[item.cacheKey] = {\n                value: item,\n                references: [clientId]\n            };\n        } else {\n            var value = $data.displayCache[key];\n            if (value.references.indexOf(clientId) < 0) {\n                value.references.push(clientId);\n            }\n        }\n        return { cacheKey: key, clientId: clientId };\n    }\n    function getFromCache(cacheKey) {\n        return $data.displayCache[cacheKey].value;\n    }\n    Handlebars.registerHelper(\"entityScope\", function () {\n\n        var sname = $data.Container.resolveName(this.getType()).split(\".\");\n        var name = sname[sname.length - 1];\n        var key = this.getType().memberDefinitions.getKeyProperties()[0];\n        var id = this[key.name];\n\n        var result = \"data-\" + name.toLowerCase() + \"-\" + id;\n        var cacheInfo = addToCache(this);\n        result += \" data-cache-client=\" + cacheInfo.clientId;\n        result += \" data-cache-item=\" + cacheInfo.cacheKey;\n        return result;\n    });\n\n    Handlebars.registerHelper(\"entityCommand\", function (command) {\n        var self = this;\n        $data.entityCache = $data.entityCache || {};\n        var sname = $data.Container.resolveName(this.getType()).split(\".\");\n        var name = sname[sname.length - 1];\n        var key = self.getType().memberDefinitions.getKeyProperties()[0];\n        var id = self[key.name];\n        var entKey = name + \":\" + id;\n\n        if (!$data.entityCache[entKey]) {\n            $data.entityCache[entKey] = self;\n        }\n        var result = \"data-command=\" + command + \" data-type=\" + name + \" data-id=\" + id;\n        var cacheInfo = addToCache(this);\n        result += \" data-cache-client=\" + cacheInfo.clientId;\n        result += \" data-cache-item=\" + cacheInfo.cacheKey;\n        return result;\n    });\n\n    $data.setCommandHandler = function (app, root) {\n        root = root || document;\n        $(root).delegate(\"[data-command]\", \"click\", function () {\n            var entKey = $(this).data(\"type\") + \":\" + $(this).data(\"id\");\n            var method = app[$(this).data(\"command\") + $(this).data(\"type\")];\n            var cacheKey = $(this).data(\"cache-item\");\n            var entity = getFromCache(cacheKey);\n            var args = [entity, $(this).data(\"id\")];\n            method.apply(app, args);\n        });\n    };\n\n    $(document).delegate(\".single-select\", \"click\", function (evt) {\n        var result = $(evt.srcElement).parentsUntil(this);\n        $(this).children().removeClass(\"active\");\n        result.addClass(\"active\");\n    });\n})(_core2.default, _Handlebars2.default, _jquery2.default);\n\nexports.default = _core2.default;\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"jaydata/core\":\"jaydata/core\"}]},{},[1])(1)\n});\n\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\nimport jQuery from 'jquery';\r\nimport Handlebars from 'Handlebars'\r\n\r\n(function ($data, Handlebars, $) {\r\n    var oldProcessor = $data.Entity.inheritedTypeProcessor;\r\n    var templateCache = {};\r\n\r\n\r\n\r\n\r\n    function getTemplate(templateName) {\r\n        return templateCache[templateName] || (templateCache[templateName] = (templateName[0] === '<' ? Handlebars.compile(templateName) : Handlebars.compile($('#' + templateName).html())));\r\n    }\r\n\r\n\r\n\r\n    function handleBarTemplateCompiler(templateCode) {\r\n        return Handlebars.compile(templateCode);\r\n    }\r\n\r\n    function htmlTemplateResolver(type, templateName) {\r\n        if (!templateName) {\r\n            return undefined;\r\n        }\r\n        templateName = templateName.trim();\r\n        return (templateName ? ( (templateName[0] === \"<\" || templateName[0] === \"{\") ? templateName : undefined) : undefined);\r\n    }\r\n\r\n    function typeTemplateResolver(type, templateName) {\r\n\r\n        //if (!templateName) {\r\n        //    var sname = $data.Container.resolveName(type).split(\".\");\r\n        //    var name = sname[sname.length - 1];\r\n        //    templateName = name;\r\n        //}\r\n        //var template = getTemplate(templateName);\r\n        return undefined;\r\n    }\r\n\r\n    function globalTemplateNameResolver(type, templateName) {\r\n        if (!templateName) {\r\n            var sname = $data.Container.resolveName(type).split(\".\");\r\n            var name = sname[sname.length - 1];\r\n            templateName = name;\r\n        }\r\n        return $('#' + templateName).html();\r\n    }\r\n\r\n\r\n    var templateEngine = {\r\n        templateResolvers: [htmlTemplateResolver, typeTemplateResolver, globalTemplateNameResolver],\r\n        templateCompiler: handleBarTemplateCompiler,\r\n        templateCache: { },\r\n        getTemplate: function (type, templateName) {\r\n            var template, incache, i;\r\n            var cacheKey = type.fullName + \"::\" + templateName;\r\n            incache = template = this.templateCache[cacheKey], i = 0;\r\n            while (!template && i < this.templateResolvers.length) {\r\n                template = this.templateResolvers[i++](type, templateName);\r\n            }\r\n            if (template && !incache) {\r\n                template = this.templateCache[cacheKey] = this.templateCompiler(template);\r\n            }\r\n            if (!template) {\r\n                console.log(\"Can not find template: \" + templateName);\r\n            }\r\n            return template;\r\n        }\r\n    };\r\n\r\n    $data.templateEngine = templateEngine;\r\n\r\n    $data.render = function (data, templateName) {\r\n        if (data instanceof $data.Entity) {\r\n            return data.render(templateName);\r\n        }\r\n\r\n        var typeName;\r\n        var item = (Array.isArray(data) ? data[0] : data);\r\n        for (var field in item) {\r\n            if (item.hasOwnProperty(field)) {\r\n                typeName += (field + \"::\");\r\n            }\r\n        };\r\n        var type = { fullName: typeName };\r\n        var template = templateEngine.getTemplate(type, templateName);\r\n        return template(data);\r\n    }\r\n\r\n    $data.renderItems = function (data, templateName) {\r\n        var result = '';\r\n        for (var i = 0; i < data.length; i++) {\r\n            result += $data.render(data[i], templateName);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    //render modes: replace, replaceContent, append, before, after\r\n    $data.renderTo = function (selector, templateName, renderMode) {\r\n        renderMode = renderMode || \"replaceContent\";\r\n\r\n        return function (data) {\r\n            if (renderMode === 'replaceContent') {\r\n                $(selector).empty();\r\n            };\r\n\r\n            var result;\r\n            result = $data.render(data, templateName);\r\n            switch (renderMode) {\r\n                case \"append\":\r\n                case \"replaceContent\":\r\n                    $(selector).append(result);\r\n                    break;\r\n                case \"replace\":\r\n                    $(selector).replaceWith(result);\r\n                    break;\r\n                case \"after\":\r\n                    $(selector).after(result);\r\n                    break;\r\n                case \"before\":\r\n                    $(selector).before(result);\r\n                    break;\r\n            }\r\n\r\n            return data;\r\n        }\r\n    }\r\n\r\n    $data.renderItemsTo = function (selector, templateName, renderMode) {\r\n        renderMode = renderMode || \"replaceContent\";\r\n\r\n        return function (data) {\r\n            if (renderMode === 'replaceContent') {\r\n                $(selector).empty();\r\n            };\r\n\r\n            var result;\r\n            result = $data.renderItems(data, templateName);\r\n            switch (renderMode) {\r\n                case \"append\":\r\n                case \"replaceContent\":\r\n                    $(selector).append(result);\r\n                    break;\r\n                case \"replace\":\r\n                    $(selector).replaceWith(result);\r\n                    break;\r\n                case \"after\":\r\n                    $(selector).after(result);\r\n                    break;\r\n                case \"before\":\r\n                    $(selector).before(result);\r\n                    break;\r\n            }\r\n\r\n            return data;\r\n        }\r\n    }\r\n\r\n\r\n    $data.Entity.inheritedTypeProcessor = function (type) {\r\n        if (oldProcessor) {\r\n            oldProcessor(type);\r\n        }\r\n\r\n\r\n        function render(item, templateName) {\r\n            var template = templateEngine.getTemplate(type, templateName);\r\n            if (! (item instanceof $data.Entity)) {\r\n                item = new type(item);\r\n            }\r\n            return template(item);\r\n        }\r\n\r\n        type.render = render;\r\n\r\n        function renderItems(items, templateName) {\r\n            var result ='';\r\n            for (var i = 0; i < items.length; i++) {\r\n                result += render(items[i], templateName);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        type.renderItems = renderItems;\r\n\r\n        type.addCommand = function (commandName, event, handler, root) {\r\n            root = root || document;\r\n            if (typeof event === 'function') {\r\n                handler = event;\r\n                event = 'click';\r\n            }\r\n            var sname = type.fullName.split(\".\");\r\n            var name = sname[sname.length - 1];\r\n            var filter = \"[data-command='\" + commandName + \"'][data-type='\" + name + \"']\";\r\n            //alert(filter);\r\n            $(root).delegate(filter, event, function () {\r\n                var self = this;\r\n                var cacheKey = $(this).data(\"cache-item\");\r\n                var entity = getFromCache(cacheKey);\r\n                var args = [entity, $(this).data(\"id\")];\r\n                handler.apply(entity, [entity, self, $(self).data(\"id\")]);\r\n            });\r\n        }\r\n\r\n        type.renderTo = function (item, selector, templateName, renderMode) {\r\n            if (typeof item !== 'object') {\r\n                renderMode = templateName;\r\n                templateName = selector;\r\n                selector = item;\r\n                return type.readAll().then($data.renderTo(selector, templateName, renderMode));\r\n            }\r\n            throw new Error(\"Not implemented\");\r\n        }\r\n\r\n        type.renderItemsTo = function (items, selector, templateName, renderMode) {\r\n            if (!(Array.isArray(items))) {\r\n                renderMode = templateName;\r\n                templateName = selector;\r\n                selector = items;\r\n                return type.readAll().then($data.renderItemsTo(selector, templateName, renderMode));\r\n            }\r\n            throw new Error(\"Not implemented\");\r\n        }\r\n        //type.renderTo = function (data, selector, template, renderMode) {\r\n        //    $data.renderTo(selector, template, renderMode)(data);\r\n        //}\r\n    }\r\n\r\n\r\n    $data.Entity.prototype.render = function (templateName) {\r\n        return this.getType().render(this, templateName);\r\n    }\r\n\r\n    $data.Entity.prototype.renderTo = function (selector, templateName, renderMode) {\r\n        return $data.renderTo(selector, templateName, renderMode)(this);\r\n    }\r\n\r\n    $data.Queryable.prototype.renderTo = function (selector, templateName, renderMode) {\r\n        return this.toArray().then(function (items) {\r\n            return $data.renderTo(selector, templateName, renderMode)(items);\r\n        });\r\n    };\r\n\r\n    $data.Queryable.prototype.renderItemsTo = function (selector, templateName, renderMode) {\r\n        return this.toArray().then(function (items) {\r\n            return $data.renderItemsTo(selector, templateName, renderMode)(items);\r\n        });\r\n    };\r\n\r\n    Object.defineProperty($data.Entity.prototype, \"fields\", {\r\n        get: function () {\r\n            var self = this;\r\n            var results = [];\r\n            this.getType().memberDefinitions.getPublicMappedProperties().forEach(function (md) {\r\n                var name = md.name;\r\n                if (md.kind === \"property\") {\r\n                    var field = {\r\n                        name: md.name,\r\n                        metadata: md\r\n                    };\r\n                    Object.defineProperty(field, 'value', {\r\n                        get: function(){\r\n                            return self[name];\r\n                        }\r\n                    });\r\n                    results.push(field);\r\n                }\r\n            });\r\n            return results;\r\n        }\r\n    });\r\n\r\n    Handlebars.registerHelper(\"renderEntity\", function (templateName) {\r\n        if (arguments.length < 2) {\r\n            templateName = undefined;\r\n        }\r\n        return new Handlebars.SafeString($data.render(this, templateName));\r\n    });\r\n\r\n    $data.displayCache = {};\r\n    var _cacheItemId = 0;\r\n    var _clientId = 0;\r\n\r\n    function addToCache(item, clientId) {\r\n        if ('undefined' === typeof clientId) {\r\n            clientId = clientId || _clientId++;\r\n        }\r\n        var key = item.cacheKey;\r\n        if ('undefined' === typeof key) {\r\n            key = item.cacheKey = _cacheItemId++;\r\n            $data.displayCache[item.cacheKey] = {\r\n                value: item,\r\n                references: [clientId]\r\n            }\r\n        } else {\r\n            var value = $data.displayCache[key];\r\n            if (value.references.indexOf(clientId) < 0) {\r\n                value.references.push(clientId);\r\n            }\r\n        }\r\n        return { cacheKey: key, clientId: clientId };\r\n    }\r\n    function getFromCache(cacheKey) {\r\n       return  $data.displayCache[cacheKey].value;\r\n    }\r\n    Handlebars.registerHelper(\"entityScope\", function () {\r\n\r\n        var sname = $data.Container.resolveName(this.getType()).split(\".\");\r\n        var name = sname[sname.length - 1];\r\n        var key = this.getType().memberDefinitions.getKeyProperties()[0];\r\n        var id = this[key.name];\r\n\r\n        var result = \"data-\" + name.toLowerCase() + \"-\" + id;\r\n        var cacheInfo = addToCache(this);\r\n        result += \" data-cache-client=\" + cacheInfo.clientId;\r\n        result += \" data-cache-item=\" + cacheInfo.cacheKey;\r\n        return result;\r\n    });\r\n\r\n\r\n    Handlebars.registerHelper(\"entityCommand\", function (command) {\r\n        var self = this;\r\n        $data.entityCache = $data.entityCache || {};\r\n        var sname = $data.Container.resolveName(this.getType()).split(\".\");\r\n        var name = sname[sname.length - 1];\r\n        var key = self.getType().memberDefinitions.getKeyProperties()[0];\r\n        var id = self[key.name];\r\n        var entKey = name + \":\" + id;\r\n\r\n        if (!$data.entityCache[entKey]) {\r\n            $data.entityCache[entKey] = self;\r\n        }\r\n        var result = \"data-command=\" + command + \" data-type=\" + name + \" data-id=\" + id;\r\n        var cacheInfo = addToCache(this);\r\n        result += \" data-cache-client=\" + cacheInfo.clientId;\r\n        result += \" data-cache-item=\" + cacheInfo.cacheKey;\r\n        return result;\r\n    });\r\n\r\n    $data.setCommandHandler = function (app, root) {\r\n        root = root || document;\r\n        $(root).delegate(\"[data-command]\", \"click\", function () {\r\n            var entKey = $(this).data(\"type\") + \":\" + $(this).data(\"id\");\r\n            var method = app[$(this).data(\"command\") + $(this).data(\"type\")];\r\n            var cacheKey = $(this).data(\"cache-item\");\r\n            var entity = getFromCache(cacheKey);\r\n            var args = [entity, $(this).data(\"id\")];\r\n            method.apply(app, args);\r\n        });\r\n    }\r\n\r\n    $(document).delegate(\".single-select\", \"click\", function (evt) {\r\n        var result = $(evt.srcElement).parentsUntil(this);\r\n        $(this).children().removeClass(\"active\");\r\n        result.addClass(\"active\");\r\n    });\r\n})($data, Handlebars, jQuery);\r\n\r\nexport default $data\r\n"],"sourceRoot":"/source/"}