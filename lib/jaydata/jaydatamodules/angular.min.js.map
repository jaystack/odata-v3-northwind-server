{"version":3,"sources":["node_modules/browser-pack/_prelude.js","angular.js","src/JayDataModules/src/JayDataModules/angular.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","$data","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_core","_core2","_jquery","_jquery2","_angular","_angular2","Entity","prototype","get","storeToken","_isNew","changedProperties","originalSave","save","originalRemove","remove","originalSaveChanges","EntityContext","saveChanges","_getCacheKey","query","charC","key","expression","getJSON","hash","charCodeAt","$provide","factory","$rootScope","$q","cache","hasOwnProperty","propName","member","getType","memberDefinitions","kind","enumerable","apply","arguments","Queryable","toLiveArrayEx","options","resultHolder","thunk","newDefer","toArray","then","items","forEach","item","push","resolve","fail","reject","scope","$apply","refresh","defer","Deferred","promise","Array","isArray","undefined","toLiveArray","cb","chainOrFire","type","targetCbArr","result","successHandlers","errorHandlers","state","_this","cacheKey","toTraceString","success","error","handler","$$phase","err","d","ItemStoreClass","EntityInstanceSave","storeAlias","hint","ItemStore","entity","_getStoreEntitySet","entitySet","_getSaveMode","mode","add","attach","entityState","EntityState","Modified","PromiseHandler","callback","createCallback","getPromise","entityContext","_setStoreAlias","EntityInstanceRemove","EntityTypeRemoveAll","EntityTypeAddMany","initDatas","addMany","jaydata/core"],"mappings":"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","file":"angular.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿// JayData 1.5.5 RC\r\n// Dual licensed under MIT and GPL v2\r\n// Copyright JayStack Technologies (http://jaydata.org/licensing)\r\n//\r\n// JayData is a standards-based, cross-platform Javascript library and a set of\r\n// practices to access and manipulate data from various online and offline sources.\r\n//\r\n// Credits:\r\n//     Hajnalka Battancs, Dániel József, János Roden, László Horváth, Péter Nochta\r\n//     Péter Zentai, Róbert Bónay, Szabolcs Czinege, Viktor Borza, Viktor Lázár,\r\n//     Zoltán Gyebrovszki, Gábor Dolla\r\n//\r\n// More info: http://jaydata.org\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define(\"jaydata/modules/angular\",[\"jaydata/core\"],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.$data = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _jquery = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function () {\n\n    Object.defineProperty(_core2.default.Entity.prototype, \"_isNew\", {\n        get: function get() {\n            return !this.storeToken;\n        }\n    });\n    Object.defineProperty(_core2.default.Entity.prototype, \"_isDirty\", {\n        get: function get() {\n            return !this._isNew && this.changedProperties && this.changedProperties.length > 0;\n        }\n    });\n\n    var originalSave = _core2.default.Entity.prototype.save;\n    var originalRemove = _core2.default.Entity.prototype.remove;\n    var originalSaveChanges = _core2.default.EntityContext.prototype.saveChanges;\n\n    var _getCacheKey = function _getCacheKey(query) {\n        var key = query.expression.getJSON();\n        var hash = 0,\n            i,\n            charC;\n        if (key.length == 0) return hash;\n        for (i = 0; i < key.length; i++) {\n            charC = key.charCodeAt(i);\n            hash = (hash << 5) - hash + charC;\n            hash = hash & hash;\n        }\n        return hash;\n    };\n\n    _angular2.default.module('jaydata', ['ng', ['$provide', function ($provide) {\n\n        $provide.factory('$data', ['$rootScope', '$q', function ($rootScope, $q) {\n            var cache = {};\n\n            _core2.default.Entity.prototype.hasOwnProperty = function (propName) {\n                var member;\n                if (this.getType && this.getType().memberDefinitions) {\n                    if (member = this.getType().memberDefinitions['$' + propName]) {\n                        return \"property\" === member.kind && member.enumerable;\n                    } else {\n                        return false;\n                    }\n                }\n                return Object.prototype.hasOwnProperty.apply(this, arguments);\n            };\n\n            _core2.default.Queryable.prototype.toLiveArrayEx = function (options, resultHolder) {\n                if (Array.isArray(options)) {\n                    resultHolder = options;\n                    options = undefined;\n                }\n                resultHolder = resultHolder || [];\n                options = options || {};\n                var self = this,\n                    scope = options.scope || $rootScope;\n\n                function thunk(newDefer) {\n                    self.toArray().then(function (items) {\n                        resultHolder.length = 0;\n                        items.forEach(function (item) {\n                            resultHolder.push(item);\n                        });\n                        newDefer.resolve(resultHolder);\n                    }).fail(newDefer.reject).then(function () {\n                        scope.$apply();\n                    });\n                }\n\n                function refresh() {\n                    var defer = _jquery2.default.Deferred(thunk);\n                    defer.promise(resultHolder);\n                    return resultHolder;\n                }\n                resultHolder.refresh = refresh;\n\n                return refresh();\n            };\n\n            _core2.default.Queryable.prototype.toLiveArray = function (cb) {\n                var _this = this;\n\n                var trace = this.toTraceString();\n                var cacheKey = _getCacheKey(this); // trace.queryText || trace.sqlText + JSON.stringify(trace.params);\n\n                if (cache[cacheKey]) {\n                    return cache[cacheKey];\n                }\n\n                var result = [];\n                cache[cacheKey] = result;\n\n                result.state = \"inprogress\";\n                result.successHandlers = [];\n                result.errorHandlers = [];\n\n                if (cb && typeof cb === 'function') {\n                    chainOrFire(cb, \"success\");\n                }\n\n                function chainOrFire(cb, type) {\n                    if (!cb) return;\n                    var targetCbArr = type === \"success\" ? result.successHandlers : result.errorHandlers;\n                    if (result.state === \"completed\") {\n                        cb(result);\n                    } else {\n                        targetCbArr.push(cb);\n                    }\n                    return result;\n                }\n\n                result.then = result.success = function (cb) {\n                    return chainOrFire(cb, \"success\");\n                };\n\n                result.error = function (cb) {\n                    return result;\n                };\n\n                result.refresh = function (cb) {\n                    //result = [];\n                    result.length = 0;\n                    result.state = \"inprogress\";\n                    chainOrFire(cb, \"success\");\n                    _this.toArray({ success: result.resolve, error: result.reject });\n                    return result;\n                };\n\n                result.resolve = function (items) {\n                    result.state = \"completed\";\n                    items.forEach(function (item) {\n                        result.push(item);\n                    });\n                    result.successHandlers.forEach(function (handler) {\n                        handler(result);\n                    });\n                    if (!$rootScope.$$phase) $rootScope.$apply();\n                };\n\n                result.reject = function (err) {\n                    result.state = \"failed\";\n                    result.errorHandlers.forEach(function (handler) {\n                        handler(err);\n                    });\n                    if (!$rootScope.$$phase) $rootScope.$apply();\n                };\n\n                this.toArray({ success: result.resolve, error: result.reject });\n\n                return result;\n            };\n\n            _core2.default.Entity.prototype.save = function () {\n                var _this = this;\n                var d = $q.defer();\n                originalSave.call(_this).then(function () {\n                    cache = {};\n                    d.resolve(_this);\n                    if (!$rootScope.$$phase) $rootScope.$apply();\n                }).fail(function (err) {\n                    d.reject(err);\n                    if (!$rootScope.$$phase) $rootScope.$apply();\n                });\n                return d.promise;\n            };\n\n            _core2.default.ItemStoreClass.prototype.EntityInstanceSave = function (storeAlias, hint) {\n                var self = _core2.default.ItemStore;\n                var entity = this;\n                return self._getStoreEntitySet(storeAlias, entity).then(function (entitySet) {\n                    return self._getSaveMode(entity, entitySet, hint, storeAlias).then(function (mode) {\n                        mode = mode || 'add';\n                        switch (mode) {\n                            case 'add':\n                                entitySet.add(entity);\n                                break;\n                            case 'attach':\n                                entitySet.attach(entity, true);\n                                entity.entityState = _core2.default.EntityState.Modified;\n                                break;\n                            default:\n                                var d = new _core2.default.PromiseHandler();\n                                var callback = d.createCallback();\n                                callback.error('save mode not supported: ' + mode);\n                                return d.getPromise();\n                        }\n\n                        return originalSaveChanges.call(entitySet.entityContext).then(function () {\n                            self._setStoreAlias(entity, entitySet.entityContext.storeToken);return entity;\n                        });\n                    });\n                });\n            };\n            _core2.default.ItemStoreClass.prototype.EntityInstanceRemove = function (storeAlias) {\n                var self = _core2.default.ItemStore;\n                var entity = this;\n                return self._getStoreEntitySet(storeAlias, entity).then(function (entitySet) {\n                    entitySet.remove(entity);\n\n                    return originalSaveChanges.call(entitySet.entityContext).then(function () {\n                        return entity;\n                    });\n                });\n            };\n            _core2.default.ItemStoreClass.prototype.EntityTypeRemoveAll = function (type) {\n                return function (storeAlias) {\n                    var self = _core2.default.ItemStore;\n                    return self._getStoreEntitySet(storeAlias, type).then(function (entitySet) {\n                        return entitySet.toArray().then(function (items) {\n                            items.forEach(function (item) {\n                                entitySet.remove(item);\n                            });\n\n                            return originalSaveChanges.call(entitySet.entityContext).then(function () {\n                                return items;\n                            });\n                        });\n                    });\n                };\n            };\n            _core2.default.ItemStoreClass.prototype.EntityTypeAddMany = function (type) {\n                return function (initDatas, storeAlias) {\n                    var self = _core2.default.ItemStore;\n                    return self._getStoreEntitySet(storeAlias, type).then(function (entitySet) {\n                        var items = entitySet.addMany(initDatas);\n                        return originalSaveChanges.call(entitySet.entityContext).then(function () {\n                            return items;\n                        });\n                    });\n                };\n            };\n\n            _core2.default.Entity.prototype.remove = function () {\n                var d = $q.defer();\n                var _this = this;\n                originalRemove.call(_this).then(function () {\n                    cache = {};\n                    d.resolve(_this);\n                    if (!$rootScope.$$phase) $rootScope.$apply();\n                }).fail(function (err) {\n                    d.reject(err);\n                    if (!$rootScope.$$phase) $rootScope.$apply();\n                });\n\n                return d.promise;\n            };\n\n            _core2.default.EntityContext.prototype.saveChanges = function () {\n                var _this = this;\n                var d = $q.defer();\n                originalSaveChanges.call(_this).then(function (n) {\n                    cache = {};\n                    d.resolve(n);\n                    if (!$rootScope.$$phase) $rootScope.$apply();\n                }).fail(function (err) {\n                    d.reject(err);\n                    if (!$rootScope.$$phase) $rootScope.$apply();\n                });\n                return d.promise;\n            };\n            return _core2.default;\n        }]);\n    }]]);\n})();\n\nexports.default = _core2.default;\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"jaydata/core\":\"jaydata/core\"}]},{},[1])(1)\n});\n\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\nimport jQuery from 'jquery';\r\nimport angular from 'angular';\r\n\r\n(function() {\r\n\r\nObject.defineProperty($data.Entity.prototype, \"_isNew\", {\r\n    get: function () {\r\n        return !this.storeToken;\r\n    }\r\n});\r\nObject.defineProperty($data.Entity.prototype, \"_isDirty\", {\r\n    get: function () {\r\n        return !this._isNew && this.changedProperties && this.changedProperties.length > 0;\r\n    }\r\n});\r\n\r\nvar originalSave = $data.Entity.prototype.save;\r\nvar originalRemove = $data.Entity.prototype.remove;\r\nvar originalSaveChanges = $data.EntityContext.prototype.saveChanges;\r\n\r\nvar _getCacheKey = function (query) {\r\n    var key = query.expression.getJSON();\r\n    var hash = 0, i, charC;\r\n    if (key.length == 0) return hash;\r\n    for (i = 0; i < key.length; i++) {\r\n        charC = key.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + charC;\r\n        hash = hash & hash;\r\n    }\r\n    return hash;\r\n}\r\n\r\nangular.module('jaydata', ['ng', ['$provide', function ($provide) {\r\n\r\n    $provide.factory('$data', ['$rootScope', '$q', function ($rootScope, $q) {\r\n        var cache = {};\r\n\r\n        $data.Entity.prototype.hasOwnProperty = function (propName) {\r\n            var member;\r\n            if (this.getType && this.getType().memberDefinitions) {\r\n                if (member = this.getType().memberDefinitions['$' + propName]) {\r\n                    return (\"property\" === member.kind) && member.enumerable;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n            return Object.prototype.hasOwnProperty.apply(this, arguments);\r\n        }\r\n\r\n\r\n        $data.Queryable.prototype.toLiveArrayEx = function (options, resultHolder) {\r\n            if (Array.isArray(options)) {\r\n                resultHolder = options;\r\n                options = undefined;\r\n            }\r\n            resultHolder = resultHolder || [];\r\n            options = options || {};\r\n            var self = this, scope = options.scope || $rootScope;\r\n\r\n            function thunk(newDefer) {\r\n                self.toArray()\r\n                    .then(function (items) {\r\n                        resultHolder.length = 0;\r\n                        items.forEach(function (item) {\r\n                            resultHolder.push(item);\r\n                        })\r\n                        newDefer.resolve(resultHolder);\r\n                    })\r\n                    .fail(newDefer.reject)\r\n                    .then(function () {\r\n                        scope.$apply();\r\n                    });\r\n            }\r\n\r\n            function refresh() {\r\n                var defer = jQuery.Deferred(thunk);\r\n                defer.promise(resultHolder);\r\n                return resultHolder;\r\n            }\r\n            resultHolder.refresh = refresh;\r\n\r\n            return refresh();\r\n        }\r\n\r\n\r\n        $data.Queryable.prototype.toLiveArray = function (cb) {\r\n            var _this = this;\r\n\r\n            var trace = this.toTraceString();\r\n            var cacheKey = _getCacheKey(this); // trace.queryText || trace.sqlText + JSON.stringify(trace.params);\r\n\r\n            if (cache[cacheKey]) {\r\n                return cache[cacheKey];\r\n            }\r\n\r\n            var result = [];\r\n            cache[cacheKey] = result;\r\n\r\n            result.state = \"inprogress\";\r\n            result.successHandlers = [];\r\n            result.errorHandlers = [];\r\n\r\n\r\n            if (cb && typeof cb === 'function') {\r\n                chainOrFire(cb, \"success\");\r\n            }\r\n\r\n            function chainOrFire(cb, type) {\r\n                if (!cb) return;\r\n                var targetCbArr = type === \"success\" ? result.successHandlers : result.errorHandlers;\r\n                if (result.state === \"completed\") {\r\n                    cb(result);\r\n                } else {\r\n                    targetCbArr.push(cb);\r\n                }\r\n                return result;\r\n            }\r\n\r\n            result.then = result.success = function (cb) {\r\n                return chainOrFire(cb, \"success\");\r\n            };\r\n\r\n            result.error = function (cb) {\r\n                return result;\r\n            };\r\n\r\n            result.refresh = function (cb) {\r\n                //result = [];\r\n                result.length = 0;\r\n                result.state = \"inprogress\";\r\n                chainOrFire(cb, \"success\");\r\n                _this.toArray({ success: result.resolve, error: result.reject });\r\n                return result;\r\n            }\r\n\r\n            result.resolve = function (items) {\r\n                result.state = \"completed\";\r\n                items.forEach(function (item) {\r\n                    result.push(item);\r\n                });\r\n                result.successHandlers.forEach(function (handler) {\r\n                    handler(result);\r\n                });\r\n                if (!$rootScope.$$phase) $rootScope.$apply();\r\n            }\r\n\r\n            result.reject = function (err) {\r\n                result.state = \"failed\";\r\n                result.errorHandlers.forEach(function (handler) {\r\n                    handler(err);\r\n                });\r\n                if (!$rootScope.$$phase) $rootScope.$apply();\r\n            }\r\n\r\n            this.toArray({ success: result.resolve, error: result.reject });\r\n\r\n            return result;\r\n        };\r\n\r\n        $data.Entity.prototype.save = function () {\r\n            var _this = this;\r\n            var d = $q.defer();\r\n            originalSave.call(_this).then(function () {\r\n                cache = {};\r\n                d.resolve(_this);\r\n                if (!$rootScope.$$phase) $rootScope.$apply();\r\n            }).fail(function (err) {\r\n                d.reject(err);\r\n                if (!$rootScope.$$phase) $rootScope.$apply();\r\n            });\r\n            return d.promise;\r\n        };\r\n\r\n        $data.ItemStoreClass.prototype.EntityInstanceSave = function (storeAlias, hint) {\r\n            var self = $data.ItemStore;\r\n            var entity = this;\r\n            return self._getStoreEntitySet(storeAlias, entity)\r\n                .then(function (entitySet) {\r\n                    return self._getSaveMode(entity, entitySet, hint, storeAlias)\r\n                        .then(function (mode) {\r\n                            mode = mode || 'add';\r\n                            switch (mode) {\r\n                                case 'add':\r\n                                    entitySet.add(entity);\r\n                                    break;\r\n                                case 'attach':\r\n                                    entitySet.attach(entity, true);\r\n                                    entity.entityState = $data.EntityState.Modified;\r\n                                    break;\r\n                                default:\r\n                                    var d = new $data.PromiseHandler();\r\n                                    var callback = d.createCallback();\r\n                                    callback.error('save mode not supported: ' + mode);\r\n                                    return d.getPromise();\r\n                            }\r\n\r\n                            return originalSaveChanges.call(entitySet.entityContext)\r\n                                .then(function () { self._setStoreAlias(entity, entitySet.entityContext.storeToken); return entity; });\r\n                        });\r\n                });\r\n        };\r\n        $data.ItemStoreClass.prototype.EntityInstanceRemove = function (storeAlias) {\r\n            var self = $data.ItemStore;\r\n            var entity = this;\r\n            return self._getStoreEntitySet(storeAlias, entity)\r\n                .then(function (entitySet) {\r\n                    entitySet.remove(entity);\r\n\r\n                    return originalSaveChanges.call(entitySet.entityContext)\r\n                        .then(function () { return entity; });\r\n                });\r\n        };\r\n        $data.ItemStoreClass.prototype.EntityTypeRemoveAll = function (type) {\r\n            return function (storeAlias) {\r\n                var self = $data.ItemStore;\r\n                return self._getStoreEntitySet(storeAlias, type)\r\n                    .then(function (entitySet) {\r\n                        return entitySet.toArray().then(function (items) {\r\n                            items.forEach(function (item) {\r\n                                entitySet.remove(item);\r\n                            });\r\n\r\n                            return originalSaveChanges.call(entitySet.entityContext)\r\n                                .then(function () { return items; });\r\n                        });\r\n                    });\r\n            }\r\n        };\r\n        $data.ItemStoreClass.prototype.EntityTypeAddMany = function (type) {\r\n            return function (initDatas, storeAlias) {\r\n                var self = $data.ItemStore;\r\n                return self._getStoreEntitySet(storeAlias, type)\r\n                    .then(function (entitySet) {\r\n                        var items = entitySet.addMany(initDatas);\r\n                        return originalSaveChanges.call(entitySet.entityContext)\r\n                            .then(function () {\r\n                                return items;\r\n                            });\r\n                    });\r\n            }\r\n        };\r\n\r\n        $data.Entity.prototype.remove = function () {\r\n            var d = $q.defer();\r\n            var _this = this;\r\n            originalRemove.call(_this).then(function () {\r\n                cache = {};\r\n                d.resolve(_this);\r\n                if (!$rootScope.$$phase) $rootScope.$apply();\r\n            }).fail(function (err) {\r\n                d.reject(err);\r\n                if (!$rootScope.$$phase) $rootScope.$apply();\r\n            });\r\n\r\n            return d.promise;\r\n        }\r\n\r\n        $data.EntityContext.prototype.saveChanges = function () {\r\n            var _this = this;\r\n            var d = $q.defer();\r\n            originalSaveChanges.call(_this).then(function (n) {\r\n                cache = {};\r\n                d.resolve(n);\r\n                if (!$rootScope.$$phase) $rootScope.$apply();\r\n            }).fail(function (err) {\r\n                d.reject(err);\r\n                if (!$rootScope.$$phase) $rootScope.$apply();\r\n            });\r\n            return d.promise;\r\n        }\r\n        return $data;\r\n    }]);\r\n}]]);\r\n\r\n})();\r\n\r\nexport default $data\r\n"],"sourceRoot":"/source/"}